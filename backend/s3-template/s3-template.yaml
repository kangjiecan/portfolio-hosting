AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: 'S3 bucket with existing Cognito User Pool authentication'

Parameters:
  BucketName:
    Type: String
    Description: 'Name for the S3 bucket'
  ExistingUserPoolId:
    Type: String
    Description: 'ID of your existing Cognito User Pool'

Resources:
  S3Bucket:
    Type: AWS::S3::Bucket
    DeletionPolicy: Retain
    Properties:
      BucketName: !Ref BucketName
      PublicAccessBlockConfiguration:
        BlockPublicAcls: false
        BlockPublicPolicy: false
        IgnorePublicAcls: false
        RestrictPublicBuckets: false
      CorsConfiguration:
        CorsRules:
          - AllowedHeaders: ['*']
            AllowedMethods: [GET, PUT, POST, DELETE, HEAD]
            AllowedOrigins: ['*']
            MaxAge: 3000
      BucketEncryption:
        ServerSideEncryptionConfiguration:
          - ServerSideEncryptionByDefault:
              SSEAlgorithm: AES256

  BucketPolicy:
    Type: AWS::S3::BucketPolicy
    Properties:
      Bucket: !Ref S3Bucket
      PolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Sid: PublicRead
            Effect: Allow
            Principal: '*'
            Action: 's3:GetObject'
            Resource: !Sub '${S3Bucket.Arn}/*'
          
          - Sid: CognitoUserPoolWrite
            Effect: Allow
            Principal: '*'
            Action:
              - 's3:PutObject'
              - 's3:DeleteObject'
            Resource: !Sub '${S3Bucket.Arn}/*'
            Condition:
              StringEquals:
                'cognito-identity.amazonaws.com:aud': !Ref ExistingUserPoolId
              ForAnyValue:StringLike:
                'cognito-identity.amazonaws.com:amr': 'authenticated'

Outputs:
  BucketName:
    Description: 'S3 bucket name'
    Value: !Ref S3Bucket
  BucketURL:
    Description: 'S3 bucket URL'
    Value: !Sub 'https://${S3Bucket.DomainName}'