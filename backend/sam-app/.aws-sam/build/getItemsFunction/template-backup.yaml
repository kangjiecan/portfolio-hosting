AWSTemplateFormatVersion: 2010-09-09
Description: >-
  sam-app
Transform: AWS::Serverless-2016-10-31

Globals:
  Function:
    Tracing: Active
    LoggingConfig:
      LogFormat: JSON
  Api:
    TracingEnabled: true

Resources:
  getItemsFunction:
    Type: AWS::Serverless::Function
    Properties:
      Handler: src/handlers/get-items.getItemsHandler
      Runtime: nodejs20.x
      Architectures:
        - x86_64
      MemorySize: 128
      Timeout: 100
      Description: Handles GET operations for Posts, Media, and User data from DynamoDB tables
      Policies:
        - DynamoDBCrudPolicy:
            TableName: PostTable
        - DynamoDBCrudPolicy:
            TableName: MediaTable
        - DynamoDBCrudPolicy:
            TableName: UserTable
      Environment:
        Variables:
          DYNAMODB_ENDPOINT: 'http://dynamodb-local:8000'
          REGION: 'us-east-1'
      Events:
        GetItems:  # Renamed for clarity
          Type: Api
          Properties:
            Path: /get
            Method: GET

  PostItemsFunction:
    Type: AWS::Serverless::Function
    Properties:
      Handler: src/handlers/post-items.handler
      Runtime: nodejs20.x
      Architectures:
        - x86_64
      MemorySize: 128
      Timeout: 100
      Environment:
        Variables:
          DYNAMODB_ENDPOINT: 'http://dynamodb-local:8000'
          REGION: 'us-east-1'
      Policies:
        - DynamoDBCrudPolicy:
            TableName: PostTable
        - DynamoDBCrudPolicy:
            TableName: MediaTable
        - DynamoDBCrudPolicy:
            TableName: UserTable
      Events:
        CreatePost:
          Type: Api
          Properties:
            Path: /post
            Method: POST
        CreateMedia:
          Type: Api
          Properties:
            Path: /media
            Method: POST
        EditPost:
          Type: Api
          Properties:
            Path: /post/{postID}
            Method: PUT
        DeletePost:
          Type: Api
          Properties:
            Path: /post/{postID}
            Method: DELETE
        DeleteMedia:
          Type: Api
          Properties:
            Path: /media/{mediaID}
            Method: DELETE



  UserTable:
    Type: AWS::DynamoDB::Table
    Properties:
      TableName: UserTable
      AttributeDefinitions:
        - AttributeName: userID
          AttributeType: S
      KeySchema:
        - AttributeName: userID
          KeyType: HASH
      ProvisionedThroughput:
        ReadCapacityUnits: 5
        WriteCapacityUnits: 5

  PostTable:
    Type: AWS::DynamoDB::Table
    Properties:
      TableName: PostTable
      AttributeDefinitions:
        - AttributeName: postID
          AttributeType: S
        - AttributeName: userID
          AttributeType: S
      KeySchema:
        - AttributeName: postID
          KeyType: HASH
      GlobalSecondaryIndexes:
        - IndexName: UserPosts
          KeySchema:
            - AttributeName: userID
              KeyType: HASH
          Projection:
            ProjectionType: ALL
          ProvisionedThroughput:
            ReadCapacityUnits: 5
            WriteCapacityUnits: 5
      ProvisionedThroughput:
        ReadCapacityUnits: 5
        WriteCapacityUnits: 5

  MediaTable:
    Type: AWS::DynamoDB::Table
    Properties:
      TableName: MediaTable
      AttributeDefinitions:
        - AttributeName: mediaID
          AttributeType: S
        - AttributeName: userID
          AttributeType: S
      KeySchema:
        - AttributeName: mediaID
          KeyType: HASH
      GlobalSecondaryIndexes:
        - IndexName: UserMedia
          KeySchema:
            - AttributeName: userID
              KeyType: HASH
          Projection:
            ProjectionType: ALL
          ProvisionedThroughput:
            ReadCapacityUnits: 5
            WriteCapacityUnits: 5
      ProvisionedThroughput:
        ReadCapacityUnits: 5
        WriteCapacityUnits: 5

  SampleTable:
    Type: AWS::Serverless::SimpleTable
    Properties:
      TableName: MyValidTableName
      PrimaryKey:
        Name: id
        Type: String
      ProvisionedThroughput:
        ReadCapacityUnits: 2
        WriteCapacityUnits: 2

  ApplicationResourceGroup:
    Type: AWS::ResourceGroups::Group
    Properties:
      Name:
        Fn::Sub: ApplicationInsights-SAM-${AWS::StackName}
      ResourceQuery:
        Type: CLOUDFORMATION_STACK_1_0

  ApplicationInsightsMonitoring:
    Type: AWS::ApplicationInsights::Application
    Properties:
      ResourceGroupName:
        Ref: ApplicationResourceGroup
      AutoConfigurationEnabled: 'true'

Outputs:
  WebEndpoint:
    Description: API Gateway endpoint URL for Prod stage
    Value: !Sub "https://${ServerlessRestApi}.execute-api.${AWS::Region}.amazonaws.com/Prod/"

